services:
  drone-server:
    image: drone/drone:2
    restart: always
    environment:
      DRONE_GITHUB_CLIENT_ID: ${DRONE_GITHUB_CLIENT_ID}
      DRONE_GITHUB_CLIENT_SECRET: ${DRONE_GITHUB_CLIENT_SECRET}
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_SERVER_HOST: ${DRONE_SERVER_HOST}
      DRONE_SERVER_PROTO: ${DRONE_SERVER_PROTO}
      DRONE_USER_CREATE: ${DRONE_USER_CREATE}
    volumes:
      - /var/lib/drone:/data
    ports:
      - '${DRONE_SERVER_PORT}:80'

  docker-runner:
    image: drone/drone-runner-docker:1
    restart: always
    environment:
      DRONE_RPC_PROTO: ${DRONE_RPC_PROTO}
      DRONE_RPC_HOST: ${DRONE_RPC_HOST}
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_RUNNER_CAPACITY: ${DRONE_RUNNER_CAPACITY}
      DRONE_RUNNER_NAME: ${DRONE_RUNNER_NAME}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '${DRONER_RUNNER_DOCKER_PORT}:3000'
    depends_on:
      - drone-server
  
  ssh-runner:
    image: drone/drone-runner-ssh
    restart: always
    environment:
      DRONE_RPC_PROTO: ${DRONE_RPC_PROTO}
      DRONE_RPC_HOST: ${DRONE_RPC_HOST}
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
    ports:
      - '${DRONER_RUNNER_SSH_PORT}:3000'
    depends_on:
      - drone-server
